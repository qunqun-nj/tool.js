<template class='nav-view'>
    <div class="menu">
        <ul :active='pagename=="animation"?"yes":"no"'>
            <li>
                <h3 @click='openPage("animation","top","no")'>动画轮播</h3>
            </li>
        </ul>
        <ul :active='pagename=="Matrix4"?"yes":"no"'>
            <li>
                <h3 @click='openPage("Matrix4","top","no")'>列主序存储的4x4矩阵</h3>
            </li>
        </ul>
        <ul :active='pagename=="Hermite"?"yes":"no"'>
            <li>
                <h3 @click='openPage("Hermite","top","no")'>Hermite三次插值</h3>
            </li>
        </ul>
        <ul :active='pagename=="getType"?"yes":"no"'>
            <li>
                <h3 @click='openPage("getType","top","no")'>获取值的类型</h3>
            </li>
        </ul>
        <ul :active='pagename=="type"?"yes":"no"'>
            <li>
                <h3 @click='openPage("type","top","no")'>值类型判断</h3>
            </li>
        </ul>
        <ul :active='pagename=="xhtml"?"yes":"no"'>
            <li>
                <h3 @click='openPage("xhtml","top","no")'>常用的DOM操作</h3>
            </li>
        </ul>
        <ul :active='pagename=="getKeyString"?"yes":"no"'>
            <li>
                <h3 @click='openPage("getKeyString","top","no")'>键盘按下的键的组合结果</h3>
            </li>
        </ul>
        <ul :active='pagename=="ruler"?"yes":"no"'>
            <li>
                <h3 @click='openPage("ruler","top","no")'>刻度尺刻度求解</h3>
            </li>
        </ul>
        <ul :active='pagename=="string"?"yes":"no"'>
            <li>
                <h3 @click='openPage("string","top","no")'>字符串操作</h3>
            </li>
        </ul>
        <ul :active='pagename=="Shader"?"yes":"no"'>
            <li>
                <h3 @click='openPage("Shader","top","no")'>代码着色计算</h3>
            </li>
        </ul>
    </div>
    <div id='root-view' class='view'>
        <div>
            <component :is='page'></component>
        </div>
    </div>
</template>
<script>
    import fixedScroll from '../../Service/fixedScroll.js';

    let pages = {
        animation: () => import('./animation.paper'),
        Matrix4: () => import('./Matrix4.paper'),
        Hermite: () => import('./Hermite.paper'),
        getType: () => import('./getType.paper'),
        type: () => import('./type.paper'),
        xhtml: () => import('./xhtml.paper'),
        getKeyString: () => import('./getKeyString.paper'),
        ruler: () => import('./ruler.paper'),
        string: () => import('./string.paper'),
        Shader: () => import('./Shader.paper')
    };

    export default {
        data() {
            return {
                page: null,
                pagename: ""
            };
        },
        mounted() {
            let urlJson = this.urlFormat(window.location.href);
            this.openPage(urlJson.router[1] in pages ? urlJson.router[1] : "animation", urlJson.params.fixed || "top");
        },
        methods: {
            openPage(pagename, fixedName, flag) {
                pages[pagename]().then(data => {
                    this.page = data.default;
                    this.pagename = pagename;
                    if (flag == 'no') window.location.href = "#/api/" + pagename + "?fixed=" + fixedName;
                    fixedScroll(fixedName);
                });
            },
            doScroll(fixedName) {
                window.location.href = "#/api/" + this.pagename + "?fixed=" + fixedName;
                fixedScroll(fixedName);
            }
        }
    };
</script>
